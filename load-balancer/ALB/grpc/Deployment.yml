apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpcdemo
  namespace: grpcserver
spec:
  selector:
    matchLabels:
      app: grpcdemo
  replicas: 1
  template:
    metadata:
      labels:
        app: grpcdemo
    spec:
      containers:
      - name: grpcdemo
        image: 407109500870.dkr.ecr.me-south-1.amazonaws.com/stggrpc:3281
        resources:
             requests:
               memory: "64Mi"
               cpu: "250m"
             limits:
               memory: "128Mi"
               cpu: "500m"
        ports:
          - containerPort: 8080
          - containerPort: 9090
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: v1
kind: Service
metadata:
  name: grpcdemo
  namespace: grpcserver
spec:
  selector:
    app: grpcdemo
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpcdemo
  namespace: grpcserver
  annotations:
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/backend-protocol-version: "GRPC"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:678878256416:certificate/0e99716a-dbb0-4aa5-b37c-76e5ac94d61e
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
spec:
  ingressClassName: alb
  rules:
  - host: test.sherdilitacademy.net # Change this to your actual domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grpcdemo
            port:
              number: 9000
  