apiVersion: v1
kind: Namespace
metadata:
  name: grpcserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpcserver
  namespace: grpcserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpcserver
  template:
    metadata:
      labels:
        app: grpcserver
    spec:
      containers:
      - name: grpcserver
        image: 678878256416.dkr.ecr.us-east-1.amazonaws.com/grpc:python
        imagePullPolicy: Always
        ports:
        - name: grpcserver
          containerPort: 9000
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: v1
kind: Service
metadata:
  name: grpcserver
  namespace: grpcserver
spec:
  type: NodePort # or LoadBalancer
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: grpcserver
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpcserver
  namespace: grpcserver
  annotations:
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/backend-protocol-version: "GRPC"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/subnets: subnet-03fc2f72d1bc834e4,subnet-01021def95f7508ef
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:407109500870:certificate/b42eef79-be5f-40b0-ac23-972a72d15634
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
spec:
  ingressClassName: alb
  rules:
  - host: agfront.mavenx.gg # Change this to your actual domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grpcserver
            port:
              number: 9000
